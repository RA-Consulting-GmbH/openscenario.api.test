name: OpenScenarioCpp
on: [push, pull_request]

jobs:
  LinuxSharedDebugBuild:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: update system
      run:  sudo apt-get update

    - name: install uuid-dev package
      run:  sudo apt-get install uuid-dev
    
    - name: cmake generate solution Debug
      run: cmake -S ./cpp --preset="Linux-shared-debug"
      
    - name: build solution Debug
      shell: bash
      run: |
        cd cpp
        cmake --build --preset="Build-Linux-shared-debug"
    
    - name: test Debug
      shell: bash
      run: |
        cd cpp/build/output/Linux_shared/Debug
        chmod a+x *
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:.
        ./OpenScenarioTester && (exit 0) 

    
  LinuxSharedReleaseBuild:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: update system
      run:  sudo apt-get update

    - name: install uuid-dev package
      run:  sudo apt-get install uuid-dev
    
    - name: cmake generate solution Release
      run: cmake -S ./cpp --preset="Linux-shared-release"
      
    - name: build solution Release
      shell: bash
      run: |
        cd cpp
        cmake --build --preset="Build-Linux-shared-release"
    
    - name: test Release
      shell: bash
      run: |
        cd cpp/build/output/Linux_shared/Release
        chmod a+x *
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:.
        ./OpenScenarioTester && (exit 0) 


  LinuxStaticDebugBuild:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: update system
      run:  sudo apt-get update

    - name: install uuid-dev package
      run:  sudo apt-get install uuid-dev
    
    - name: cmake generate solution Debug
      run: cmake -S ./cpp --preset="Linux-static-debug"
      
    - name: build solution Debug
      shell: bash
      run: |
        cd cpp
        cmake --build --preset="Build-Linux-static-debug"
    
    - name: test Debug
      shell: bash
      run: |
        cd cpp/build/output/Linux_static/Debug
        chmod a+x *
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:.
        ./OpenScenarioTester && (exit 0) 


  LinuxStaticReleaseBuild:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: update system
      run:  sudo apt-get update

    - name: install uuid-dev package
      run:  sudo apt-get install uuid-dev
    
    - name: cmake generate solution Release
      run: cmake -S ./cpp --preset="Linux-static-release"
      
    - name: build solution Release
      shell: bash
      run: |
        cd cpp
        cmake --build --preset="Build-Linux-static-release"
    
    - name: test Release
      shell: bash
      run: |
        cd cpp/build/output/Linux_static/Release
        chmod a+x *
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:.
        ./OpenScenarioTester && (exit 0) 


  Win32SharedDebugBuild:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: cmake generate solution Debug
      run: cmake -S ./cpp --preset="VS2019-Win32-shared"
      
    - name: build solution Debug
      run: |
        cd cpp
        cmake --build --preset="Build-VS2019-Win32-shared" --config Debug
    
    - name: test Debug
      shell: bash
      run: |
        cd cpp/build/output/Win32_shared/Debug
        ./OpenScenarioTester && (exit 0) 


  Win32SharedReleaseBuild:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: cmake generate solution Release
      run: cmake -S ./cpp --preset="VS2019-Win32-shared"
      
    - name: build solution Release
      run: |
        cd cpp
        cmake --build --preset="Build-VS2019-Win32-shared" --config Release

    - name: test Release
      shell: bash
      run: |
        cd cpp/build/output/Win32_shared/Release
        ./OpenScenarioTester && (exit 0) 


  Win64SharedDebugBuild:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: cmake generate solution Debug
      run: cmake -S ./cpp --preset="VS2019-x64-shared"
      
    - name: build solution Debug
      run: |
        cd cpp
        cmake --build --preset="Build-VS2019-x64-shared" --config Debug
    
    - name: test Debug
      shell: bash
      run: |
        cd cpp/build/output/x64_shared/Debug
        ./OpenScenarioTester && (exit 0) 


  Win64SharedReleaseBuild:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: cmake generate solution Release
      run: cmake -S ./cpp --preset="VS2019-x64-shared"
      
    - name: build solution Release
      run: |
        cd cpp
        cmake --build --preset="Build-VS2019-x64-shared" --config Release

    - name: test Release
      shell: bash
      run: |
        cd cpp/build/output/x64_shared/Release
        ./OpenScenarioTester && (exit 0) 


  Win32StaticDebugBuild:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: cmake generate solution Debug
      run: cmake -S ./cpp --preset="VS2019-Win32-static"
      
    - name: build solution Debug
      run: |
        cd cpp
        cmake --build --preset="Build-VS2019-Win32-static" --config Debug
    
    - name: test Debug
      shell: bash
      run: |
        cd cpp/build/output/Win32_static/Debug
        ./OpenScenarioTester && (exit 0) 


  Win32StaticReleaseBuild:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: cmake generate solution Release
      run: cmake -S ./cpp --preset="VS2019-Win32-static"
      
    - name: build solution Release
      run: |
        cd cpp
        cmake --build --preset="Build-VS2019-Win32-static" --config Release

    - name: test Release
      shell: bash
      run: |
        cd cpp/build/output/Win32_static/Release
        ./OpenScenarioTester && (exit 0) 


  Win64StaticDebugBuild:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: cmake generate solution Debug
      run: cmake -S ./cpp --preset="VS2019-x64-static"
      
    - name: build solution Debug
      run: |
        cd cpp
        cmake --build --preset="Build-VS2019-x64-static" --config Debug
    
    - name: test Debug
      shell: bash
      run: |
        cd cpp/build/output/x64_static/Debug
        ./OpenScenarioTester && (exit 0) 


  Win64StaticReleaseBuild:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: cmake generate solution Release
      run: cmake -S ./cpp --preset="VS2019-x64-static"
      
    - name: build solution Release
      run: |
        cd cpp
        cmake --build --preset="Build-VS2019-x64-static" --config Release

    - name: test Release
      shell: bash
      run: |
        cd cpp/build/output/x64_static/Release
        ./OpenScenarioTester && (exit 0) 

name: OpenScenarioCppArtifacts
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name: 
        description: 'Artifact name'
        default: 'OpenScenarioWindowsLinuxDevPackage'


jobs:
  CreatePackage:
    runs-on: ubuntu-latest
    needs: [LinuxSharedReleaseBuild, LinuxStaticReleaseBuild, Win32SharedReleaseBuild, Win32StaticReleaseBuild, x64SharedReleaseBuild, x64StaticReleaseBuild]

    steps:
    - name: create artifacts dir
      shell: bash
      run: mkdir -p ./artifacts

    - name: update system
      run:  sudo apt-get update


    # Linux builds
    # - name: get artifacts LinuxSharedDebug
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: LinuxSharedDebug
    #     path: ./artifacts

    - name: get artifacts LinuxSharedRelease
      uses: actions/download-artifact@v2
      with:
        name: LinuxSharedRelease
        path: ./artifacts

    # - name: get artifacts LinuxStaticDebug
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: LinuxStaticDebug
    #     path: ./artifacts

    - name: get artifacts LinuxStaticRelease
      uses: actions/download-artifact@v2
      with:
        name: LinuxStaticRelease
        path: ./artifacts

    # Win32 builds
    # - name: get artifacts Win32SharedDebug
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: Win32SharedDebug
    #     path: ./artifacts

    - name: get artifacts Win32SharedRelease
      uses: actions/download-artifact@v2
      with:
        name: Win32SharedRelease
        path: ./artifacts

    # - name: get artifacts Win32StaticDebug
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: Win32StaticDebug
    #     path: ./artifacts

    - name: get artifacts Win32StaticRelease
      uses: actions/download-artifact@v2
      with:
        name: Win32StaticRelease
        path: ./artifacts

    # x64 builds
    # - name: get artifacts x64SharedDebug
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: x64SharedDebug
    #     path: ./artifacts

    - name: get artifacts x64SharedRelease
      uses: actions/download-artifact@v2
      with:
        name: x64SharedRelease
        path: ./artifacts

    # - name: get artifacts x64StaticDebug
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: x64StaticDebug
    #     path: ./artifacts

    - name: get artifacts x64StaticRelease
      uses: actions/download-artifact@v2
      with:
        name: x64StaticRelease
        path: ./artifacts

    # Check packages
    - name: check packages
      run: ls ./artifacts/OpenSCENARIO*

    - name: publish artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.inputs.name }}
        path: ./artifacts/OpenSCENARIO*


  # Linux Shared
  # LinuxSharedDebugBuild:
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: update system
  #     run:  sudo apt-get update

  #   - name: install uuid-dev package
  #     run:  sudo apt-get install uuid-dev
    
  #   - name: cmake generate solution Debug
  #     run: cmake -S ./cpp --preset="Linux-shared-debug"
      
  #   - name: build solution Debug
  #     shell: bash
  #     run: |
  #       cd cpp
  #       cmake --build --preset="Build-Linux-shared-debug"

  #  - name: create package Linux shared debug
  #    run: |
  #      chmod a+x ./cpp/buildArtifact/*.sh
  #      ./cpp/buildArtifact/createLinuxWindowsBinPackage.sh shared debug

  #   - name: publish artifact
  #     uses: actions/upload-artifact@v2
  #     with: 
  #       name: LinuxSharedDebug
  #       path: ./cpp/buildArtifact/OpenSCENARIO_API_*


  LinuxSharedReleaseBuild:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: update system
      run:  sudo apt-get update

    - name: install uuid-dev package
      run:  sudo apt-get install uuid-dev
    
    - name: cmake generate solution Release
      run: cmake -S ./cpp --preset="Linux-shared-release"
      
    - name: build solution Release
      shell: bash
      run: |
        cd cpp
        cmake --build --preset="Build-Linux-shared-release"

    - name: create package Linux shared release
      run: |
        chmod a+x ./cpp/buildArtifact/*.sh
        ./cpp/buildArtifact/createLinuxWindowsBinPackage.sh shared

    - name: publish artifact
      uses: actions/upload-artifact@v2
      with: 
        name: LinuxSharedRelease
        path: ./cpp/buildArtifact/OpenSCENARIO_API_*


  # Linux Static
  # LinuxStaticDebugBuild:
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: update system
  #     run:  sudo apt-get update

  #   - name: install uuid-dev package
  #     run:  sudo apt-get install uuid-dev
    
  #   - name: cmake generate solution Debug
  #     run: cmake -S ./cpp --preset="Linux-static-debug"
      
  #   - name: build solution Debug
  #     shell: bash
  #     run: |
  #       cd cpp
  #       cmake --build --preset="Build-Linux-static-debug"

  #   - name: create package Linux static debug
  #     run: |
  #       chmod a+x ./cpp/buildArtifact/*.sh
  #       ./cpp/buildArtifact/createLinuxWindowsBinPackage.sh static debug

  #   - name: publish artifacts
  #     uses: actions/upload-artifact@v2
  #     with: 
  #       name: LinuxStaticDebug
  #       path: ./cpp/buildArtifact/OpenSCENARIO_API_*


  LinuxStaticReleaseBuild:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: update system
      run:  sudo apt-get update

    - name: install uuid-dev package
      run:  sudo apt-get install uuid-dev
    
    - name: cmake generate solution Release
      run: cmake -S ./cpp --preset="Linux-static-release"
      
    - name: build solution Release
      shell: bash
      run: |
        cd cpp
        cmake --build --preset="Build-Linux-static-release"

    - name: create package Linux static release
      run: |
        chmod a+x ./cpp/buildArtifact/*.sh
        ./cpp/buildArtifact/createLinuxWindowsBinPackage.sh static release

    - name: publish artifacts
      uses: actions/upload-artifact@v2
      with: 
        name: LinuxStaticRelease
        path: ./cpp/buildArtifact/OpenSCENARIO_API_*


  # Win32 Shared
  # Win32SharedDebugBuild:
  #   runs-on: windows-latest
    
  #   steps:
  #   - uses: actions/checkout@v2
    
  #   - name: cmake generate solution Debug
  #     run: cmake -S ./cpp --preset="VS2022-Win32-shared"
      
  #   - name: build solution Debug
  #     run: |
  #       cd cpp
  #       cmake --build --preset="Build-VS2022-Win32-shared" --config Debug

  #   - name: create package Win32 shared debug
  #     run: |
  #       chmod a+x ./cpp/buildArtifact/*.sh
  #       ./cpp/buildArtifact/createLinuxWindowsBinPackage.sh shared debug Win32

  #   - name: publish artifacts
  #     uses: actions/upload-artifact@v2
  #     with: 
  #       name: Win32SharedDebug
  #       path: ./cpp/buildArtifact/OpenSCENARIO_API_*


  Win32SharedReleaseBuild:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: cmake generate solution Release
      run: cmake -S ./cpp --preset="VS2022-Win32-shared"
      
    - name: build solution Release
      run: |
        cd cpp
        cmake --build --preset="Build-VS2022-Win32-shared" --config Release

    - name: create package Win32 shared release
      run: |
        chmod a+x ./cpp/buildArtifact/*.sh
        ./cpp/buildArtifact/createLinuxWindowsBinPackage.sh shared release Win32

    - name: publish artifacts
      uses: actions/upload-artifact@v2
      with: 
        name: Win32SharedRelease
        path: ./cpp/buildArtifact/OpenSCENARIO_API_*


  # Win32 Static
  # Win32StaticDebugBuild:
  #   runs-on: windows-latest
    
  #   steps:
  #   - uses: actions/checkout@v2
    
  #   - name: cmake generate solution Debug
  #     run: cmake -S ./cpp --preset="VS2022-Win32-static"
      
  #   - name: build solution Debug
  #     run: |
  #       cd cpp
  #       cmake --build --preset="Build-VS2022-Win32-static" --config Debug

  #   - name: create package Win32 static debug
  #     run: |
  #       chmod a+x ./cpp/buildArtifact/*.sh
  #       ./cpp/buildArtifact/createLinuxWindowsBinPackage.sh static debug Win32

  #   - name: publish artifacts
  #     uses: actions/upload-artifact@v2
  #     with: 
  #       name: Win32StaticDebug
  #       path: ./cpp/buildArtifact/OpenSCENARIO_API_*


  Win32StaticReleaseBuild:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: cmake generate solution Release
      run: cmake -S ./cpp --preset="VS2022-Win32-static"
      
    - name: build solution Release
      run: |
        cd cpp
        cmake --build --preset="Build-VS2022-Win32-static" --config Release

    - name: create package Win32 static release
      run: |
        chmod a+x ./cpp/buildArtifact/*.sh
        ./cpp/buildArtifact/createLinuxWindowsBinPackage.sh static release Win32

    - name: publish artifacts
      uses: actions/upload-artifact@v2
      with: 
        name: Win32StaticRelease
        path: ./cpp/buildArtifact/OpenSCENARIO_API_*


  # x64 Shared
  # x64SharedDebugBuild:
  #   runs-on: windows-latest
    
  #   steps:
  #   - uses: actions/checkout@v2
    
  #   - name: cmake generate solution Debug
  #     run: cmake -S ./cpp --preset="VS2022-x64-shared"
      
  #   - name: build solution Debug
  #     run: |
  #       cd cpp
  #       cmake --build --preset="Build-VS2022-x64-shared" --config Debug
    
  #   - name: create package x64 shared debug
  #     run: |
  #       chmod a+x ./cpp/buildArtifact/*.sh
  #       ./cpp/buildArtifact/createLinuxWindowsBinPackage.sh shared debug x64

  #   - name: publish artifacts
  #     uses: actions/upload-artifact@v2
  #     with: 
  #       name: x64SharedDebug
  #       path: ./cpp/buildArtifact/OpenSCENARIO_API_*


  x64SharedReleaseBuild:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: cmake generate solution Release
      run: cmake -S ./cpp --preset="VS2022-x64-shared"
      
    - name: build solution Release
      run: |
        cd cpp
        cmake --build --preset="Build-VS2022-x64-shared" --config Release

    - name: create package x64 shared release
      run: |
        chmod a+x ./cpp/buildArtifact/*.sh
        ./cpp/buildArtifact/createLinuxWindowsBinPackage.sh shared release x64

    - name: publish artifacts
      uses: actions/upload-artifact@v2
      with: 
        name: x64SharedRelease
        path: ./cpp/buildArtifact/OpenSCENARIO_API_*


  # x64 Static
  # x64StaticDebugBuild:
  #   runs-on: windows-latest
    
  #   steps:
  #   - uses: actions/checkout@v2
    
  #   - name: cmake generate solution Debug
  #     run: cmake -S ./cpp --preset="VS2022-x64-static"
      
  #   - name: build solution Debug
  #     run: |
  #       cd cpp
  #       cmake --build --preset="Build-VS2022-x64-static" --config Debug

  #   - name: create package x64 static debug
  #     run: |
  #       chmod a+x ./cpp/buildArtifact/*.sh
  #       ./cpp/buildArtifact/createLinuxWindowsBinPackage.sh static debug x64

  #   - name: publish artifacts
  #     uses: actions/upload-artifact@v2
  #     with: 
  #       name: x64StaticDebug
  #       path: ./cpp/buildArtifact/OpenSCENARIO_API_*


  x64StaticReleaseBuild:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: cmake generate solution Release
      run: cmake -S ./cpp --preset="VS2022-x64-static"
      
    - name: build solution Release
      run: |
        cd cpp
        cmake --build --preset="Build-VS2022-x64-static" --config Release

    - name: create package x64 static release
      run: |
        chmod a+x ./cpp/buildArtifact/*.sh
        ./cpp/buildArtifact/createLinuxWindowsBinPackage.sh static release x64

    - name: publish artifacts
      uses: actions/upload-artifact@v2
      with: 
        name: x64StaticRelease
        path: ./cpp/buildArtifact/OpenSCENARIO_API_*


